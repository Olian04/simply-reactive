var simplyReactive=function(e){"use strict";const s={},t=[{registerDependency:()=>{}}],u=e=>t[t.length-1].registerDependency(e),n=e=>t.push(e),r=()=>t.pop(),i=((e=1)=>()=>"_"+e++)(),c=(o=s,e=>{const s=(null==e?void 0:e.key)||i();s in o||(o[s]={value:e.default,subscribers:{}});const t={key:s,set:e=>{if("function"==typeof e){const t=e;o[s].value=t(o[s].value)}else o[s].value=e;Object.values(o[s].subscribers).forEach((e=>e()))},get:()=>(u(t.subscribe),o[s].value),subscribe:(e,t)=>(o[s].subscribers[e]=t,()=>{delete o[s].subscribers[e]})};return t});var o;const b=(e=>s=>{const t=(null==s?void 0:s.key)||i(),c=()=>{e[t].isDirty=!0,Object.values(e[t].subscribers).forEach((e=>e()))};t in e||(e[t]={value:null,isDirty:!0,subscribers:{},unsubscribeFunctions:[]});const o={key:t,get:()=>(u(o.subscribe),e[t].isDirty&&(e[t].unsubscribeFunctions.forEach((e=>e())),e[t].unsubscribeFunctions=[],n({registerDependency:s=>{const u=s(t,c);e[t].unsubscribeFunctions.push(u)}}),e[t].value=s.get(),e[t].isDirty=!1,r()),e[t].value),subscribe:(s,u)=>(e[t].subscribers[s]=u,()=>{delete e[t].subscribers[s]})};return o.get(),o})(s);var a;!function(e){e.Discard="discard",e.Flush="flush-sync",e.FlushAsync="flush-async"}(a||(a={}));const l=(e=>(s,t)=>{var u;const c=(null==t?void 0:t.key)||i();c in e||(e[c]={notifyTimeoutId:void 0,debounceDuration:null!==(u=null==t?void 0:t.debounceDuration)&&void 0!==u?u:0,unsubscribeFunctions:[]});const o=()=>{e[c].unsubscribeFunctions.forEach((e=>e())),e[c].unsubscribeFunctions=[]},b=()=>{o(),n({registerDependency:s=>{const t=s(c,(()=>{-1!==e[c].debounceDuration?(clearTimeout(e[c].notifyTimeoutId),e[c].notifyTimeoutId=setTimeout(b,e[c].debounceDuration)):b()}));e[c].unsubscribeFunctions.push(t)}}),s(),r()};return b(),(t=a.Discard)=>{if(void 0===e[c])return;const u=()=>{s()},n=()=>{o(),clearTimeout(e[c].notifyTimeoutId),e[c].notifyTimeoutId=void 0,e[c].debounceDuration=0,e[c].unsubscribeFunctions=[],delete e[c]};switch(t){case a.Discard:n();break;case a.Flush:u(),n();break;case a.FlushAsync:clearTimeout(e[c].notifyTimeoutId),setTimeout((()=>{u(),n()}),0);default:throw new Error(`Unknown DebounceCleanupStrategy: ${t}`)}}})(s);return e.createAtom=c,e.createEffect=l,e.createGroup=()=>{throw new Error("Not yet implemented")},e.createResource=e=>{const s=c({default:0}),t=b({key:e.key,get:()=>(s.get(),e.get())});return{key:t.key,get:t.get,subscribe:t.subscribe,invalidate:()=>s.set((e=>e+1))}},e.createSelector=b,e.visualizeDependencyGraph=()=>{const e=["graph TD;"];for(let[t,u]of Object.entries(s))if("subscribers"in u)for(let s of Object.keys(u.subscribers))e.push(`${t}--\x3e${s};`);return e.join("\n\t")},e}({});
